######################################################################
# This file is part of the Irrvuan OS image builder script suite.
#
# Copyright 2018 Urban Wallasch <irrwahn35@freenet.de>
#
# See LICENSE file for more details.
#

function istrue() {
    case $1 in
        1|y|Y|yes|YES|true|TRUE|on|ON) echo 1 ;;
        *) echo 0 ;;
    esac
}

function datediff() {
    echo $(( $(date -d "$1" '+%s') - $(date -d "$2" '+%s') ))
}

function ts_now() {
    date '+%Y-%m-%dT%H:%M:%S'
}

function log() {
    echo "$(ts_now) $1" | tee -a "$LOGFILE" 2>/dev/null
}

function pause() {
    if [ -t 0 ] ; then
        echo "$1"
        echo -n "> Hit ENTER to proceed or CTRL-C to abort: "
        read jnk
    fi
}

function cleanup() {
    trap_sig "" INT QUIT TERM ERR
    for cmd in $CLEANUP ; do
        $cmd
    done
}

function check() {
    if  [ $1 -ne 0 ] ; then
        log "***** ERROR $1: $2 *****"
        log "***** BACKTRACE *****"
        log "$( printf "%12s()  %3d  %s\n" \
                ${FUNCNAME[0]} ${LINENO} ${BASH_SOURCE[0]} )"
        for (( i=0; i<${#BASH_LINENO[@]}-1; i++ )) ; do
            log "$( printf "%12s()  %3d  %s\n" \
                ${FUNCNAME[$i+1]} ${BASH_LINENO[$i]} ${BASH_SOURCE[$i+1]} )"
        done
        log "*********************"
        cleanup
        log "Build aborted after $(( $(datediff "$(ts_now)" "$START") / 60 )) min."
        exit $1
    fi
}

# Install "curried" signal handler(s)
function trap_sig() {
    func="$1" ; shift
    for sig in "$@"; do
        trap "$func $sig" "$sig"
    done
}

function sig_handler() {
    check 42 "caught signal $1"
}

# Perform in-place variable substitution:
function var_subst() {
    if [ -n "$1" ] ; then
        log "${FUNCNAME[0]} $1"
        local t=$(< "$1")
        echo "$t" | envsubst "$2" > "$1"
    fi
}


# EOF
